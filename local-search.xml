<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>二分查找</title>
    <link href="/2021/02/02/2021-2-2/"/>
    <url>/2021/02/02/2021-2-2/</url>
    
    <content type="html"><![CDATA[<h3 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h3><h6 id="BinarySearch"><a href="#BinarySearch" class="headerlink" title="BinarySearch"></a>BinarySearch</h6><p>&nbsp;</p><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>类似二分法</p><p>用于顺序存储结构</p><h4 id="使用心得"><a href="#使用心得" class="headerlink" title="使用心得"></a>使用心得</h4><p>面对问题时有两种思考方式</p><ul><li>不断缩小查找范围直到找到最优解</li><li>不断排除“必不可能为最优解的解”，直至最后</li></ul><blockquote><p>我一直在想怎么来说明二分查找“一定不会漏掉最优解”，这里的第二种思考方式能很好地解释这一问题。</p></blockquote><p>&nbsp;</p><hr><p>&nbsp;</p><h4 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h4><p>Q：查找最接近的元素</p><p>描述</p><blockquote><p>在一个非降序列中，查找与给定值最接近的元素。</p></blockquote><p>输入</p><blockquote><p>第一行包含一个整数n，为非降序列长度。1 &lt;= n &lt;= 100000。<br>第二行包含n个整数，为非降序列各元素。所有元素的大小均在0-1,000,000,000之间。<br>第三行包含一个整数m，为要询问的给定值个数。1 &lt;= m &lt;= 10000。<br>接下来m行，每行一个整数，为要询问最接近元素的给定值。所有给定值的大小均在0-1,000,000,000之间。</p></blockquote><p>输出</p><blockquote><p>m行，每行一个整数，为最接近相应给定值的元素值，保持输入顺序。若有多个值满足条件，输出最小的一个。</p></blockquote><p>样例输入</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-number">3</span><br><span class="hljs-symbol">2 </span><span class="hljs-number">5</span> <span class="hljs-number">8</span><br><span class="hljs-number">2</span><br><span class="hljs-number">10</span><br><span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><p>y样例输出</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-number">8</span><br><span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><p>&nbsp;</p><hr><p>&nbsp;</p><h6 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">find</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a[],<span class="hljs-keyword">int</span> n,<span class="hljs-keyword">int</span> x)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> l=<span class="hljs-number">0</span>,r=n<span class="hljs-number">-1</span>,m,ans=<span class="hljs-number">0x3f3f3f3f</span>;<br>    <span class="hljs-keyword">while</span>(l&lt;=r)<br>    &#123;<br>        m=l+(r-l)/<span class="hljs-number">2</span>;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">abs</span>(a[m]-x)&lt;<span class="hljs-built_in">abs</span>(ans-x))<br>        ans=a[m];<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">abs</span>(a[m]-x)==<span class="hljs-built_in">abs</span>(ans-x))<br>        ans=min(ans,a[m]);<br>        <span class="hljs-keyword">if</span>(a[m]&lt;x)<br>        l=m+<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a[m]&gt;x)<br>        r=m<span class="hljs-number">-1</span>;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">break</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> ans;   <br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> n,m,a[<span class="hljs-number">100001</span>];<br>    <span class="hljs-built_in">cin</span>&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>    <span class="hljs-built_in">cin</span>&gt;&gt;a[i];<br>    <span class="hljs-built_in">cin</span>&gt;&gt;m;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;m;i++)<br>    &#123;<br>        <span class="hljs-keyword">int</span> x;<br>        <span class="hljs-built_in">cin</span>&gt;&gt;x;<br>        x=find(a,n,x);<br>        <span class="hljs-built_in">cout</span>&lt;&lt;x&lt;&lt;<span class="hljs-built_in">endl</span>;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h6 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h6><ul><li>L4 ~ L21为二分查找</li><li>考虑将中间的值与要找的数”x”做差，算绝对值，比较中间值与”x”的大小<strong>假设中间值小于”x”，那么中间值左侧的数据与”x”差的绝对值会更大，必不可能为最优解，因此舍弃</strong></li><li>用中间值计算得到的结果已经判断过，因此查找时<code>r=m-1</code>或者<code>l=m+1</code>不会造成漏解</li><li>L7中<code>while(l&lt;=r)</code>说明查找范围包含两端的数据</li></ul>]]></content>
    
    
    <categories>
      
      <category>算法学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>基础知识</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>指针变量学习笔记</title>
    <link href="/2021/01/30/2021-1-30/"/>
    <url>/2021/01/30/2021-1-30/</url>
    
    <content type="html"><![CDATA[<h2 id="指针变量学习笔记"><a href="#指针变量学习笔记" class="headerlink" title="指针变量学习笔记"></a>指针变量学习笔记</h2><h4 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h4><p>指针变量是一种变量类型（好像是废话）（但是个人认为这句话特别重要）</p><p>指针变量的值：某一内存地址的编号（这个内存地址上存有一个变量，就说这个指针指向这个变量；如果这个内存地址上没有存任何东西，就说这个指针是空指针）</p><blockquote><p>或许用一种类比的方法更容易理解：</p><p>你面前有五个袋子，从左到右依次排列，分别编号一二三四五；</p><p>定义一个int变量<code>int a=9</code>，假设存放在第三个袋子中。好，现在打开第三个袋子，你看到 “9”这个数字。</p><p>定义一个指针变量p，指向a，假设指针p存放在第二个袋子中。好，现在打开第二个袋子，你看到的是 “第三个袋子” 这样一行字。</p></blockquote><h4 id="怎么用"><a href="#怎么用" class="headerlink" title="怎么用"></a>怎么用</h4><h5 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h5><p>例如：声明一个指针p，这个指针p指向一个int类型的变量a，代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">int</span> a = <span class="hljs-number">12345</span>;   <span class="hljs-comment">//随便想的一个数，没啥特殊意思</span><br><span class="hljs-keyword">int</span> *p = &amp;a;<br></code></pre></td></tr></table></figure><p>解释一下：<code>int *p</code> 里面<code>int *</code>是变量类型，表示 “一个指向int类型变量的指针” ，<code>p</code> 是变量名，<code>&amp;a</code> 中&amp;是 “取址符号” ，<code>&amp;a</code>表示a的内存地址。</p><p>上面第二行代码意思就是：声明一个变量 p ，类型是指向int变量的指针，同时给这个变量赋值，值是一串内存地址，这个内存地址上存放着一个int变量a。</p><p>或许第二行写成如下形式更容易理解：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">int</span> *p;   <span class="hljs-comment">//定义一个指针变量，变量名为p</span><br>p = &amp;a;   <span class="hljs-comment">//p的值是a所在的内存地址</span><br></code></pre></td></tr></table></figure><blockquote><p>按照上面的类比，&amp;a就是“第三个袋子”这样一行字，p=&amp;a就是将这个地址名赋给了p</p></blockquote><h5 id="取值"><a href="#取值" class="headerlink" title="取值"></a>取值</h5><p>用到取值符号<code>*</code>：</p><p>p是这个指针变量的变量名，加上* 变成 *p 意思就是 “p所指地址上的变量的值” </p><blockquote><p>按照上面的类比，p就是”第三个袋子“这一行字，*p就是“第三个袋子里面的值”，也就是说 *p == a是成立的。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>算法学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>基础知识</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>高精加和高精乘（正整数）</title>
    <link href="/2021/01/29/2021-1-29/"/>
    <url>/2021/01/29/2021-1-29/</url>
    
    <content type="html"><![CDATA[<h2 id="高精加和高精乘"><a href="#高精加和高精乘" class="headerlink" title="高精加和高精乘"></a>高精加和高精乘</h2><h6 id="仅正整数"><a href="#仅正整数" class="headerlink" title="仅正整数"></a>仅正整数</h6><h4 id="高精度加法"><a href="#高精度加法" class="headerlink" title="高精度加法"></a>高精度加法</h4><h5 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h5><p>核心：模拟笔算</p><p>即用数组里的每个元素来作为笔算加法竖式的每一位</p><p>为规范化以及移植性，输入输出均为string</p><p>步骤：</p><ol><li>将字符串存入数组a和b</li><li>另外定义两个数组s和c，分别存储每一位的结果值和进位值</li><li>c[0]的值为0，s[i]的值是(a[i]+b[i]+c[i])%10，c[i]的值是(a[i]+b[i]+c[i])/10，以此类推，完成所有位数的相加</li><li>将数组元素存入新定义的string中</li></ol><p>注意事项：</p><blockquote><ul><li>对数组int a[10]的理解：包含a[0]，a[1]，a[2]，…，a[9]共10个元素</li><li>string类：按顺序往里填入元素时（步骤4），用<code>str+ =  &#39;单个元素&#39;</code>，表示结束时如果用赋值的方法（比如<code>str[2] = &#39;\0&#39;;</code>），可能引起后续对该字符串的操作出错</li><li>输出string类：调用函数<code> cout&lt;&lt;sum.c_str()&lt;&lt;endl;</code>（因为不能直接输出）（可以试试）</li></ul></blockquote><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">getN</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> n=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span>(a[n]!=<span class="hljs-string">&#x27;\0&#x27;</span>)n++;<br>    <span class="hljs-keyword">return</span> n;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">string</span> a,b;<br>    <span class="hljs-built_in">cin</span>&gt;&gt;a&gt;&gt;b;<br>    <span class="hljs-keyword">int</span> an=getN(a);<br>    <span class="hljs-keyword">int</span> bn=getN(b);<br>    <span class="hljs-keyword">int</span> N=an;<br>    <span class="hljs-keyword">if</span>(an&lt;bn)N=bn;<br>    <span class="hljs-keyword">int</span> aa[N]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;an;i++)aa[i]=a[an<span class="hljs-number">-1</span>-i]-<span class="hljs-string">&#x27;0&#x27;</span>;<br>    <span class="hljs-keyword">int</span> bb[N]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;bn;i++)bb[i]=b[bn<span class="hljs-number">-1</span>-i]-<span class="hljs-string">&#x27;0&#x27;</span>;<br>    <span class="hljs-keyword">int</span> s[N+<span class="hljs-number">1</span>],c[N+<span class="hljs-number">1</span>];<br>    c[<span class="hljs-number">0</span>]=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)<br>    &#123;<br>        s[i]=(aa[i]+bb[i]+c[i])%<span class="hljs-number">10</span>;<br>        c[i+<span class="hljs-number">1</span>]=(aa[i]+bb[i]+c[i])/<span class="hljs-number">10</span>;<br>    &#125;<br>    s[N]=c[N];<br>    <span class="hljs-built_in">string</span> sum;<br>    <span class="hljs-keyword">if</span>(s[N]==<span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)<br>        sum+=s[N<span class="hljs-number">-1</span>-i]+<span class="hljs-string">&#x27;0&#x27;</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;=N;i++)<br>        sum+=s[N-i]+<span class="hljs-string">&#x27;0&#x27;</span>;<br>    &#125;<br>    <span class="hljs-built_in">cout</span>&lt;&lt;sum.c_str()&lt;&lt;<span class="hljs-built_in">endl</span>;<br><br>    system(<span class="hljs-string">&quot;pause&quot;</span>);<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="高精度乘法"><a href="#高精度乘法" class="headerlink" title="高精度乘法"></a>高精度乘法</h4><h5 id="实现思路-1"><a href="#实现思路-1" class="headerlink" title="实现思路"></a>实现思路</h5><p>先实现个位数乘多位的整数（输入输出均为字符串），再在经过对应补零操作后用高精加，实现高精度乘法</p><blockquote><p>至于为什么不用高精度累加来代替乘法，原因：肉眼可见的复杂度</p></blockquote><h5 id="个位数乘多位整数"><a href="#个位数乘多位整数" class="headerlink" title="个位数乘多位整数"></a>个位数乘多位整数</h5><p>注意事项：同高精度加法，不再赘述</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">getN</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> n=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span>(a[n]!=<span class="hljs-string">&#x27;\0&#x27;</span>)n++;<br>    <span class="hljs-keyword">return</span> n;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> a;<br>    <span class="hljs-built_in">string</span> b;<br>    <span class="hljs-built_in">cin</span>&gt;&gt;a&gt;&gt;b;<br>    <span class="hljs-keyword">int</span> n=getN(b);<br>    <span class="hljs-keyword">int</span> bb[n];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>    bb[i]=b[n<span class="hljs-number">-1</span>-i]-<span class="hljs-string">&#x27;0&#x27;</span>;<br>    <span class="hljs-keyword">int</span> c[n+<span class="hljs-number">1</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">int</span> s[n+<span class="hljs-number">1</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>    &#123;<br>        s[i]=(a*bb[i]+c[i])%<span class="hljs-number">10</span>;<br>        c[i+<span class="hljs-number">1</span>]=(a*bb[i]+c[i])/<span class="hljs-number">10</span>;<br>    &#125;<br>    s[n]=c[n];<br>    <span class="hljs-built_in">string</span> r;<br>    <span class="hljs-keyword">if</span>(s[n]==<span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>        r+=s[n<span class="hljs-number">-1</span>-i]+<span class="hljs-string">&#x27;0&#x27;</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;=n;i++)<br>        r+=s[n-i]+<span class="hljs-string">&#x27;0&#x27;</span>;<br>    &#125;<br>    <span class="hljs-built_in">cout</span>&lt;&lt;r.c_str()&lt;&lt;<span class="hljs-built_in">endl</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="多位数乘多位数"><a href="#多位数乘多位数" class="headerlink" title="多位数乘多位数"></a>多位数乘多位数</h5><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">getN</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> n=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span>(a[n]!=<span class="hljs-string">&#x27;\0&#x27;</span>)n++;<br>    <span class="hljs-keyword">return</span> n;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a,<span class="hljs-built_in">string</span> b)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> an=getN(a);<br>    <span class="hljs-keyword">int</span> bn=getN(b);<br>    <span class="hljs-keyword">int</span> N=an;<br>    <span class="hljs-keyword">if</span>(an&lt;bn)N=bn;<br>    <span class="hljs-keyword">int</span> aa[N]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;an;i++)<br>        aa[i]=a[an<span class="hljs-number">-1</span>-i]-<span class="hljs-string">&#x27;0&#x27;</span>;<br>    <span class="hljs-keyword">int</span> bb[N]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;bn;i++)<br>        bb[i]=b[bn<span class="hljs-number">-1</span>-i]-<span class="hljs-string">&#x27;0&#x27;</span>;<br>    <span class="hljs-keyword">int</span> s[N+<span class="hljs-number">1</span>],c[N+<span class="hljs-number">1</span>];<br>    c[<span class="hljs-number">0</span>]=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)<br>    &#123;<br>        s[i]=(aa[i]+bb[i]+c[i])%<span class="hljs-number">10</span>;<br>        c[i+<span class="hljs-number">1</span>]=(aa[i]+bb[i]+c[i])/<span class="hljs-number">10</span>;<br>    &#125;<br>    s[N]=c[N];<br>    <span class="hljs-built_in">string</span> sum;<br>    <span class="hljs-keyword">if</span>(s[N]==<span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)<br>        sum+=s[N<span class="hljs-number">-1</span>-i]+<span class="hljs-string">&#x27;0&#x27;</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;=N;i++)<br>        sum+=s[N-i]+<span class="hljs-string">&#x27;0&#x27;</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> sum;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">multi_1</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a,<span class="hljs-built_in">string</span> b)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> n=getN(b);<br>    <span class="hljs-keyword">int</span> bb[n];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>    bb[i]=b[n<span class="hljs-number">-1</span>-i]-<span class="hljs-string">&#x27;0&#x27;</span>;<br>    <span class="hljs-keyword">int</span> c[n+<span class="hljs-number">1</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">int</span> s[n+<span class="hljs-number">1</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>    &#123;<br>        s[i]=(a*bb[i]+c[i])%<span class="hljs-number">10</span>;<br>        c[i+<span class="hljs-number">1</span>]=(a*bb[i]+c[i])/<span class="hljs-number">10</span>;<br>    &#125;<br>    s[n]=c[n];<br>    <span class="hljs-built_in">string</span> r;<br>    <span class="hljs-keyword">if</span>(s[n]==<span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>        r+=s[n<span class="hljs-number">-1</span>-i]+<span class="hljs-string">&#x27;0&#x27;</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;=n;i++)<br>        r+=s[n-i]+<span class="hljs-string">&#x27;0&#x27;</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> r;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">add_0</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a,<span class="hljs-built_in">string</span> b)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;a;i++)<br>    &#123;<br>        b+=<span class="hljs-string">&quot;0&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> b;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">string</span> a,b;<br>    <span class="hljs-built_in">cin</span>&gt;&gt;a&gt;&gt;b;<br>    <span class="hljs-keyword">int</span> an=getN(a);<br>    <span class="hljs-keyword">int</span> aa[an];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;an;i++)<br>    aa[i]=a[an<span class="hljs-number">-1</span>-i]-<span class="hljs-string">&#x27;0&#x27;</span>;<br>    <span class="hljs-built_in">string</span> c=<span class="hljs-string">&quot;0&quot;</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;an;i++)<br>    c=add(add_0(i,multi_1(aa[i],b)),c);<br>    <span class="hljs-built_in">cout</span>&lt;&lt;c.c_str()&lt;&lt;<span class="hljs-built_in">endl</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>核心思想是模拟竖式计算</p><p>注意string类的用法</p><p>PS: 其实这一篇博客还是为了测试</p>]]></content>
    
    
    <categories>
      
      <category>算法学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>高精</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>To my devoted ones</title>
    <link href="/2020/12/05/2020-12-5/"/>
    <url>/2020/12/05/2020-12-5/</url>
    
    <content type="html"><![CDATA[<p>Oh, I was 22 years old</p><p>&nbsp;</p><p>My mother told me that you learn more as you go</p><p>&nbsp;</p><p>But I’ve spent many nights alone</p><p>&nbsp;</p><p>Do I need more for me to make this house a home</p><p>&nbsp;</p><p>‘Cause sometimes there’s more to the story</p><p>&nbsp;</p><p>And they don’t know what’s going on in</p><p>&nbsp;</p><p>My life behind closed doors</p><p>&nbsp;</p><p>Maybe there is nothing wrong</p><p>&nbsp;</p><p>And I will keep holding on</p><p>&nbsp;</p><p>I know I can be strong</p><p>&nbsp;</p><p>&nbsp;</p><p>​          &emsp;        &emsp;             &emsp;    &emsp;    &emsp;                              &emsp;         &emsp;                                        ——My Blood &lt; Westlife &gt;</p><hr><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span><br><span class="hljs-function"></span>&#123;<br><br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">&quot;just for test&quot;</span>&lt;&lt;<span class="hljs-built_in">endl</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>Just For Test      <code> just for  test</code></p>]]></content>
    
    
    <categories>
      
      <category>胡言乱语</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>起点</title>
    <link href="/2020/11/26/2020-11-26/"/>
    <url>/2020/11/26/2020-11-26/</url>
    
    <content type="html"><![CDATA[<h1 id="起点"><a href="#起点" class="headerlink" title="起点"></a>起点</h1><p>我一直在想要怎样以一个较为正式的开头来开启我的博客之旅，之后觉得大可不必。怎样开头都算是开头，如果说我直接进入正题 ，没了开头，其实也问题不大。现在的我，在武汉大学信息学部国软教学楼B4-201教室，现在的时间是21：27，今天是11月26日，在2020年，我写下了，一篇名为《起点》的博客。</p><p>从上上周起，我开始学习C++，然后参加了几天前的新生赛。</p><p>然后沉迷于代码之中，无法自拔……以至于……以至于高数掉了几节课，英语小测差点不及格？（wawa大哭）</p><p>我不知道未来会怎么样，但是捣鼓这个东西，的确给了我快乐。我意识到我是喜欢这个东西的。所以我选择“冲冲冲”。有幸遇到了学长学姐，有幸遇到了同专业的、有着同样想法的同学，有幸看着身边的人跟我一样，从零基础开始努力，有幸听了ACM宣讲……我遇见过不那么快乐的事，也遇上了很多很棒的事，你看这个世界是复杂的，看不太懂，你看这一行行代码也挺复杂的。</p><p>我想要，走上这条路，我想要将宝贵的大学时光分一些给它，即使是从零开始，即使是暂时远远落后。我不知道将会怎样，我也不必想将来会怎样，我只需要知道：这一刻我是快乐的，我确实是在为一个目标努力着，它仿佛就在眼前，触手可及。我会试着，会努力安排好学习生活，这是给自己一个交待。</p><p>然后，我开通了许久的博客，有了第一篇它正式的内容。现在的我在自习室，时间是21：53，明天晚上有一门课的开卷考试。</p><p>这是我的起点。</p><p>2020/11/26</p>]]></content>
    
    
    <categories>
      
      <category>胡言乱语</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>导航</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<p>&nbsp;</p><h4 id="这里收录一些有用的网站"><a href="#这里收录一些有用的网站" class="headerlink" title="这里收录一些有用的网站"></a>这里收录一些有用的网站</h4><ul><li><a href="noi.openjudge.cn">程序设计基础训练</a></li><li><a href="https://www.webdesignrankings.com/resources/lolcolors/">网站色彩搭配推荐</a></li></ul><p>&nbsp;</p><h4 id="有趣的网站"><a href="#有趣的网站" class="headerlink" title="有趣的网站"></a>有趣的网站</h4><ul><li><a href="https://theuselessweb.com/">一个没用的网站</a></li><li><a href="https://suulnnka.github.io/BullshitGenerator/index.html">可以用来水字数的网站</a></li><li><a href="https://www.remove.bg/zh">没事来抠一抠图</a></li><li><a href="http://scp-wiki-cn.wikidot.com/">当然少不了基金会</a></li><li><a href="https://fakeupdate.net/">或许你想给电脑升一下级？</a></li><li><a href="https://zuanbot.com/">lol中国，电信二区</a></li></ul>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>about</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<p> 一个普通的男生</p><p>现就读于湖北某大学计算机学院</p><p>喜欢折腾，喜欢整活</p><p>因菜而学</p><p>用QQ比用微信多</p><p><del>花括号换行（doge）</del></p><p><del>讨厌写注释（doge）</del></p><p>有幸结识大佬<a href="http://www.noobzyk.top/">Ekennis</a>，一起从零开始准备比赛（虽然比我厉害多了）</p><p>写blog大概是为了记录大学生活吧</p><p>以上</p>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>文章分类</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<p> 文章分类 ovo</p>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>tags</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>友情链接</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<p> 友情链接</p>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>tags</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>标签</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
</search>
