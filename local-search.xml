<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>高精度计算器</title>
    <link href="/2021/02/23/2021-2-23/"/>
    <url>/2021/02/23/2021-2-23/</url>
    
    <content type="html"><![CDATA[<h3 id="2020-2021寒假大作业——高精度计算器"><a href="#2020-2021寒假大作业——高精度计算器" class="headerlink" title="2020-2021寒假大作业——高精度计算器"></a>2020-2021寒假大作业——高精度计算器</h3><p>&nbsp;</p><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>模仿竖式计算</p><p>逆波兰算法，将中缀表达式转换为后缀表达式</p><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><p>负数和小数的加减乘除乘方阶乘运算</p><h4 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h4><p>格式正确的表达式（均为半角符号）</p><ul><li>加       +</li><li>减       -</li><li>乘       *</li><li>除       /</li><li>幂       ^</li><li>阶乘   !</li><li>括号   ()</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> inf 65535</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">getN</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> n=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span>(a[n]!=<span class="hljs-string">&#x27;\0&#x27;</span>)n++;<br>    <span class="hljs-keyword">return</span> n;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">absint</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span>(a[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;-&#x27;</span>)<br>    &#123;<br>        <span class="hljs-built_in">string</span> x;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;a[i]!=<span class="hljs-string">&#x27;\0&#x27;</span>;i++)<br>        &#123;<br>            x+=a[i];        <br>        &#125;<br>        <span class="hljs-keyword">return</span> x;<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> a;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">examformat</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">bool</span> t=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span>(a[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;-&#x27;</span>)t=<span class="hljs-number">1</span>;<br>    a=absint(a);<br>    <span class="hljs-keyword">int</span> n=getN(a);<br>    <span class="hljs-keyword">int</span> l=<span class="hljs-number">0</span>,r=n<span class="hljs-number">-1</span>;<br>    <span class="hljs-keyword">while</span>(a[l]==<span class="hljs-string">&#x27;0&#x27;</span>&amp;&amp;a[l+<span class="hljs-number">1</span>]!=<span class="hljs-string">&#x27;.&#x27;</span>)l++;<br>    <span class="hljs-keyword">bool</span> dot=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;a[i]!=<span class="hljs-string">&#x27;\0&#x27;</span>;i++)<br>    <span class="hljs-keyword">if</span>(a[i]==<span class="hljs-string">&#x27;.&#x27;</span>)<br>    dot=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">if</span>(dot)<br>    &#123;<br>        <span class="hljs-keyword">while</span>(a[r]==<span class="hljs-string">&#x27;0&#x27;</span>||a[r]==<span class="hljs-string">&#x27;.&#x27;</span>)<br>        r--;<br>    &#125;<br>    <span class="hljs-built_in">string</span> result;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=l;i&lt;=r;i++)<br>    &#123;<br>        result+=a[i];<br>    &#125;<br>    <span class="hljs-keyword">if</span>(t&amp;&amp;result[<span class="hljs-number">0</span>]!=<span class="hljs-string">&#x27;\0&#x27;</span>)result=<span class="hljs-string">&quot;-&quot;</span>+result;<br>    <span class="hljs-keyword">if</span>(result[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;\0&#x27;</span>)result=<span class="hljs-string">&quot;0&quot;</span>;<br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">inttofloat</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a,<span class="hljs-keyword">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br>    a=examformat(a);<br>    <span class="hljs-keyword">bool</span> test=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span>(a[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;-&#x27;</span>)test=<span class="hljs-number">1</span>;<br>    a=absint(a);<br>    <span class="hljs-keyword">int</span> an=getN(a);<br>    <span class="hljs-built_in">string</span> result;<br>    <span class="hljs-keyword">if</span>(n&lt;an)<br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;an-n;i++)<br>        result+=a[i];<br>        <span class="hljs-keyword">if</span>(n!=<span class="hljs-number">0</span>)result+=<span class="hljs-string">&#x27;.&#x27;</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=an-n;i&lt;an;i++)<br>        result+=a[i];<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        result+=<span class="hljs-string">&quot;0.&quot;</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n-an;i++)<br>        result+=<span class="hljs-string">&#x27;0&#x27;</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=n-an;i&lt;n;i++)<br>        result+=a[i+an-n];<br>    &#125;<br>    <span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;<br>    n=getN(result);<br>    <span class="hljs-keyword">while</span>(result[i]!=<span class="hljs-string">&#x27;.&#x27;</span>&amp;&amp;result[i]!=<span class="hljs-string">&#x27;\0&#x27;</span>)i++;<br>    <span class="hljs-keyword">if</span>(i==n)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(test)result=<span class="hljs-string">&quot;-&quot;</span>+result;<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(j=<span class="hljs-number">0</span>;result[n<span class="hljs-number">-1</span>-j]==<span class="hljs-string">&#x27;0&#x27;</span>;j++);<br>        <span class="hljs-keyword">if</span>(result[n<span class="hljs-number">-1</span>-j]==<span class="hljs-string">&#x27;.&#x27;</span>)j++;<br>        <span class="hljs-built_in">string</span> finalresult;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> k=<span class="hljs-number">0</span>;k&lt;n-j;k++)finalresult+=result[k];<br>        <span class="hljs-keyword">if</span>(test)finalresult=<span class="hljs-string">&quot;-&quot;</span>+finalresult;<br>        <span class="hljs-keyword">return</span> finalresult;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">floattoint</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a,<span class="hljs-keyword">int</span> b)</span><span class="hljs-comment">//移动b位 b一定大于小数点后有效位数</span></span><br><span class="hljs-function"></span>&#123;<br>    a=examformat(a);<br>    <span class="hljs-built_in">string</span> subresult,result;<br>    <span class="hljs-keyword">int</span> an=getN(a);<br>    <span class="hljs-keyword">int</span> n=<span class="hljs-number">0</span>,tb=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span>(a[n]!=<span class="hljs-string">&#x27;.&#x27;</span>&amp;&amp;a[n]!=<span class="hljs-string">&#x27;\0&#x27;</span>)n++;<br>    <span class="hljs-keyword">if</span>(n==an)result=a;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)subresult+=a[i];<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=n+<span class="hljs-number">1</span>;i&lt;an;i++)<br>        &#123;<br>            subresult+=a[i];<br>            tb++;<br>        &#125;<br>        <span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">while</span>(subresult[i]==<span class="hljs-string">&#x27;0&#x27;</span>)i++;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=i;subresult[j]!=<span class="hljs-string">&#x27;\0&#x27;</span>;j++)<br>        result+=subresult[j];<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=tb;i&lt;b;i++)result+=<span class="hljs-string">&#x27;0&#x27;</span>;<br>    <span class="hljs-keyword">return</span> result;<br>    <br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">compareint</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a,<span class="hljs-built_in">string</span> b)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> la=getN(a);<br>    <span class="hljs-keyword">int</span> lb=getN(b);<br>    <span class="hljs-keyword">if</span>(la&gt;lb)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">if</span>(la&lt;lb)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;la;i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(a[i]&gt;b[i])<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span>(a[i]&lt;b[i])<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a,<span class="hljs-built_in">string</span> b)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> an=getN(a);<br>    <span class="hljs-keyword">int</span> bn=getN(b);<br>    <span class="hljs-keyword">int</span> N=an;<br>    <span class="hljs-keyword">if</span>(an&lt;bn)N=bn;<br>    <span class="hljs-keyword">int</span> aa[N]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;an;i++)<br>        aa[i]=a[an<span class="hljs-number">-1</span>-i]-<span class="hljs-string">&#x27;0&#x27;</span>;<br>    <span class="hljs-keyword">int</span> bb[N]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;bn;i++)<br>        bb[i]=b[bn<span class="hljs-number">-1</span>-i]-<span class="hljs-string">&#x27;0&#x27;</span>;<br>    <span class="hljs-keyword">int</span> s[N+<span class="hljs-number">1</span>],c[N+<span class="hljs-number">1</span>];<br>    c[<span class="hljs-number">0</span>]=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)<br>    &#123;<br>        s[i]=(aa[i]+bb[i]+c[i])%<span class="hljs-number">10</span>;<br>        c[i+<span class="hljs-number">1</span>]=(aa[i]+bb[i]+c[i])/<span class="hljs-number">10</span>;<br>    &#125;<br>    s[N]=c[N];<br>    <span class="hljs-built_in">string</span> sum;<br>    <span class="hljs-keyword">if</span>(s[N]==<span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)<br>        sum+=s[N<span class="hljs-number">-1</span>-i]+<span class="hljs-string">&#x27;0&#x27;</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;=N;i++)<br>        sum+=s[N-i]+<span class="hljs-string">&#x27;0&#x27;</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> sum;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">minusint</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a,<span class="hljs-built_in">string</span> b)</span><span class="hljs-comment">//a-b</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> an=getN(a);<br>    <span class="hljs-keyword">int</span> bn=getN(b);<br>    <span class="hljs-keyword">int</span> N=an;<br>    <span class="hljs-keyword">if</span>(an&lt;bn)N=bn;<br>    <span class="hljs-keyword">int</span> aa[N]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;an;i++)aa[i]=a[an<span class="hljs-number">-1</span>-i]-<span class="hljs-string">&#x27;0&#x27;</span>;<br>    <span class="hljs-keyword">int</span> bb[N]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;bn;i++)bb[i]=b[bn<span class="hljs-number">-1</span>-i]-<span class="hljs-string">&#x27;0&#x27;</span>;<br>    <span class="hljs-keyword">int</span> r[N],bor[N+<span class="hljs-number">1</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)<br>    &#123;<br>        aa[i]-=bor[i];<br>        <span class="hljs-keyword">if</span>(aa[i]&lt;bb[i])<br>        &#123;<br>            r[i]=aa[i]-bb[i]+<span class="hljs-number">10</span>;<br>            bor[i+<span class="hljs-number">1</span>]++;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            r[i]=aa[i]-bb[i];<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">int</span> n=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=N<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--)<br>    <span class="hljs-keyword">if</span>(r[i]!=<span class="hljs-number">0</span>)<br>    &#123;<br>        n=i+<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">break</span>;<br>    &#125; <br>    <span class="hljs-built_in">string</span> result;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>    &#123;<br>        result+=r[n-i<span class="hljs-number">-1</span>]+<span class="hljs-string">&#x27;0&#x27;</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(result[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;\0&#x27;</span>)result+=<span class="hljs-string">&#x27;0&#x27;</span>;<br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">multi_1</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a,<span class="hljs-built_in">string</span> b)</span><span class="hljs-comment">//个位数a乘b</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> n=getN(b);<br>    <span class="hljs-keyword">int</span> bb[n];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>    bb[i]=b[n<span class="hljs-number">-1</span>-i]-<span class="hljs-string">&#x27;0&#x27;</span>;<br>    <span class="hljs-keyword">int</span> c[n+<span class="hljs-number">1</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">int</span> s[n+<span class="hljs-number">1</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>    &#123;<br>        s[i]=(a*bb[i]+c[i])%<span class="hljs-number">10</span>;<br>        c[i+<span class="hljs-number">1</span>]=(a*bb[i]+c[i])/<span class="hljs-number">10</span>;<br>    &#125;<br>    s[n]=c[n];<br>    <span class="hljs-built_in">string</span> r;<br>    <span class="hljs-keyword">if</span>(s[n]==<span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>        r+=s[n<span class="hljs-number">-1</span>-i]+<span class="hljs-string">&#x27;0&#x27;</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;=n;i++)<br>        r+=s[n-i]+<span class="hljs-string">&#x27;0&#x27;</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> r;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">add_0</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a,<span class="hljs-built_in">string</span> b)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;a;i++)<br>    &#123;<br>        b+=<span class="hljs-string">&quot;0&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> b;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">multiint</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a,<span class="hljs-built_in">string</span> b)</span><span class="hljs-comment">//整数乘法</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> an=getN(a);<br>    <span class="hljs-keyword">int</span> aa[an];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;an;i++)<br>    aa[i]=a[an<span class="hljs-number">-1</span>-i]-<span class="hljs-string">&#x27;0&#x27;</span>;<br>    <span class="hljs-built_in">string</span> c=<span class="hljs-string">&quot;0&quot;</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;an;i++)<br>    c=add(add_0(i,multi_1(aa[i],b)),c);<br>    <span class="hljs-keyword">return</span> c;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">multi</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a,<span class="hljs-built_in">string</span> b)</span><span class="hljs-comment">//含负数小数的乘法</span></span><br><span class="hljs-function"></span>&#123;<br>    a=examformat(a);<br>    b=examformat(b);<br>    <span class="hljs-keyword">bool</span> ta=<span class="hljs-number">0</span>,tb=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span>(a[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;-&#x27;</span>)ta=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">if</span>(b[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;-&#x27;</span>)tb=<span class="hljs-number">1</span>;<br>    a=absint(a);<br>    b=absint(b);<br>    <span class="hljs-keyword">int</span> da=<span class="hljs-number">0</span>,db=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">bool</span> c=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;a[i]!=<span class="hljs-string">&#x27;\0&#x27;</span>;i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(c)da++;<br>        <span class="hljs-keyword">if</span>(a[i]==<span class="hljs-string">&#x27;.&#x27;</span>)c=<span class="hljs-number">1</span>;<br>    &#125;<br>    c=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;b[i]!=<span class="hljs-string">&#x27;\0&#x27;</span>;i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(c)db++;<br>        <span class="hljs-keyword">if</span>(b[i]==<span class="hljs-string">&#x27;.&#x27;</span>)c=<span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">int</span> d=da;<br>    <span class="hljs-keyword">if</span>(db&gt;da)d=db;<br>    a=floattoint(a,d);<br>    b=floattoint(b,d);<br>    <span class="hljs-built_in">string</span> result;<br>    result=multiint(a,b);<br>    d+=d;<br>    result=inttofloat(result,d);<br>    <span class="hljs-keyword">if</span>(ta!=tb)result=<span class="hljs-string">&quot;-&quot;</span>+result;<br>    result=examformat(result);<br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">addab</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a,<span class="hljs-built_in">string</span> b)</span></span><br><span class="hljs-function"></span>&#123;<br>    a=examformat(a);<span class="hljs-comment">//万能预处理</span><br>    b=examformat(b);<br>    <span class="hljs-keyword">int</span> da=<span class="hljs-number">0</span>,db=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">bool</span> c=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;a[i]!=<span class="hljs-string">&#x27;\0&#x27;</span>;i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(c)da++;<br>        <span class="hljs-keyword">if</span>(a[i]==<span class="hljs-string">&#x27;.&#x27;</span>)c=<span class="hljs-number">1</span>;<br>    &#125;<br>    c=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;b[i]!=<span class="hljs-string">&#x27;\0&#x27;</span>;i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(c)db++;<br>        <span class="hljs-keyword">if</span>(b[i]==<span class="hljs-string">&#x27;.&#x27;</span>)c=<span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">int</span> d=da;<br>    <span class="hljs-keyword">if</span>(db&gt;da)d=db;<br>    a=floattoint(a,d);<br>    b=floattoint(b,d);<span class="hljs-comment">//万能预处理</span><br>    <span class="hljs-built_in">string</span> result;<br>    <span class="hljs-keyword">bool</span> ta=<span class="hljs-number">0</span>,tb=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span>(a[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;-&#x27;</span>)ta=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">if</span>(b[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;-&#x27;</span>)tb=<span class="hljs-number">1</span>;<br>    a=absint(a);<br>    b=absint(b);<br>    <span class="hljs-keyword">if</span>(ta==tb)<br>    &#123;<br>        result=add(a,b);<br>        <span class="hljs-keyword">if</span>(ta)<br>        result=<span class="hljs-string">&quot;-&quot;</span>+result;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-keyword">bool</span> c=compareint(a,b);<br>        <span class="hljs-keyword">if</span>(c)result=minusint(a,b);<br>        <span class="hljs-keyword">else</span> result=minusint(b,a);<br>        <span class="hljs-keyword">if</span>(c==ta)result=<span class="hljs-string">&quot;-&quot;</span>+result;<br>    &#125;<br>    result=inttofloat(result,d);<br>    result=examformat(result);<br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">aminusb</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a,<span class="hljs-built_in">string</span> b)</span></span><br><span class="hljs-function"></span>&#123;<br>    a=examformat(a);<br>    b=examformat(b);<br>    <span class="hljs-keyword">int</span> da=<span class="hljs-number">0</span>,db=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">bool</span> c=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;a[i]!=<span class="hljs-string">&#x27;\0&#x27;</span>;i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(c)da++;<br>        <span class="hljs-keyword">if</span>(a[i]==<span class="hljs-string">&#x27;.&#x27;</span>)c=<span class="hljs-number">1</span>;<br>    &#125;<br>    c=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;b[i]!=<span class="hljs-string">&#x27;\0&#x27;</span>;i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(c)db++;<br>        <span class="hljs-keyword">if</span>(b[i]==<span class="hljs-string">&#x27;.&#x27;</span>)c=<span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">int</span> d=da;<br>    <span class="hljs-keyword">if</span>(db&gt;da)d=db;<br>    a=floattoint(a,d);<br>    b=floattoint(b,d);<br>    <span class="hljs-built_in">string</span> result;<br>    <span class="hljs-keyword">bool</span> ta=<span class="hljs-number">0</span>,tb=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span>(a[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;-&#x27;</span>)ta=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">if</span>(b[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;-&#x27;</span>)tb=<span class="hljs-number">1</span>;<br>    a=absint(a);<br>    b=absint(b);<br>    <span class="hljs-keyword">if</span>(ta==tb)<br>    &#123;<br>        <span class="hljs-keyword">bool</span> c=compareint(a,b);<br>        <span class="hljs-keyword">if</span>(c)result=minusint(a,b);<br>        <span class="hljs-keyword">else</span> result=minusint(b,a);<br>        <span class="hljs-keyword">if</span>(c==ta)<br>        result=<span class="hljs-string">&quot;-&quot;</span>+result;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        result=add(a,b);<br>        <span class="hljs-keyword">if</span>(ta)result=<span class="hljs-string">&quot;-&quot;</span>+result;<br>    &#125;<br>    result=inttofloat(result,d);<br>    result=examformat(result);<br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">divideslint</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a,<span class="hljs-built_in">string</span> b)</span><span class="hljs-comment">//same length</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;<br>    a=aminusb(a,b);<br>    <span class="hljs-keyword">while</span>(a[<span class="hljs-number">0</span>]!=<span class="hljs-string">&#x27;-&#x27;</span>)<br>    &#123;<br>        a=aminusb(a,b);<br>        i++;<br>    &#125;<br>    <span class="hljs-keyword">return</span> i;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">divideint</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a,<span class="hljs-built_in">string</span> b)</span><span class="hljs-comment">//a&gt;&gt;b</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> an=getN(a);<br>    <span class="hljs-keyword">int</span> bn=getN(b);<br>    <span class="hljs-built_in">string</span> c,result;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;bn;i++)c+=a[i];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;an-bn+<span class="hljs-number">1</span>;i++)<br>    &#123;<br>        <span class="hljs-keyword">int</span> current=divideslint(c,b);<br>        result+=current+<span class="hljs-string">&#x27;0&#x27;</span>;<br>        <span class="hljs-built_in">string</span> x;<br>        x+=<span class="hljs-string">&#x27;0&#x27;</span>+current;<br>        c=aminusb(c,multi(x,b));<br>        <span class="hljs-keyword">if</span>(i!=an-bn)c+=a[bn+i];<br>    &#125;<br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">divide</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a,<span class="hljs-built_in">string</span> b, <span class="hljs-keyword">bool</span> *c)</span><span class="hljs-comment">//a除以b,b不为0</span></span><br><span class="hljs-function"></span>&#123;<br>    a=examformat(a);<br>    b=examformat(b);<br>    <span class="hljs-keyword">bool</span> ta=<span class="hljs-number">0</span>,tb=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span>(a[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;-&#x27;</span>)ta=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">if</span>(b[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;-&#x27;</span>)tb=<span class="hljs-number">1</span>;<br>    a=absint(a);<br>    b=absint(b);<br>    <span class="hljs-keyword">int</span> da=<span class="hljs-number">0</span>,db=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">bool</span> cc=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;a[i]!=<span class="hljs-string">&#x27;\0&#x27;</span>;i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(cc)da++;<br>        <span class="hljs-keyword">if</span>(a[i]==<span class="hljs-string">&#x27;.&#x27;</span>)cc=<span class="hljs-number">1</span>;<br>    &#125;<br>    cc=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;b[i]!=<span class="hljs-string">&#x27;\0&#x27;</span>;i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(cc)db++;<br>        <span class="hljs-keyword">if</span>(b[i]==<span class="hljs-string">&#x27;.&#x27;</span>)cc=<span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">int</span> d=da;<br>    <span class="hljs-keyword">if</span>(db&gt;da)d=db;<br>    b=floattoint(b,d);<br>    b=examformat(b);<br>    <span class="hljs-keyword">if</span>(b==<span class="hljs-string">&quot;0&quot;</span>)<br>    &#123;<br>        *c=<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;0&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">int</span> bn=getN(b);<br>    a=floattoint(a,d+<span class="hljs-number">512</span>+bn);<br>    <span class="hljs-built_in">string</span> result=divideint(a,b);<br>    result=examformat(result);<br>    result=inttofloat(result,<span class="hljs-number">512</span>+bn);<br>    <span class="hljs-keyword">if</span>(ta!=tb)result=<span class="hljs-string">&quot;-&quot;</span>+result;<br>    result=examformat(result);<br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">natural</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a)</span></span><br><span class="hljs-function"></span>&#123;<br>    a=absint(a);<br>    <span class="hljs-keyword">int</span> c=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;a[i]!=<span class="hljs-string">&#x27;\0&#x27;</span>;i++)<br>    <span class="hljs-keyword">if</span>(a[i]==<span class="hljs-string">&#x27;.&#x27;</span>)<br>    c=i;<br>    <span class="hljs-built_in">string</span> result;<br>    <span class="hljs-keyword">if</span>(!c)<span class="hljs-keyword">return</span> a;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;c;i++)<br>    result+=a[i];<br>    result=examformat(result);<br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">powerint</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a,<span class="hljs-built_in">string</span> b,<span class="hljs-keyword">bool</span> *c)</span><span class="hljs-comment">//a^b</span></span><br><span class="hljs-function"></span>&#123;<br>    b=natural(b);<br>    <span class="hljs-keyword">if</span>(a==<span class="hljs-string">&quot;0&quot;</span>&amp;&amp;b!=<span class="hljs-string">&quot;0&quot;</span>)<span class="hljs-keyword">return</span> <span class="hljs-string">&quot;0&quot;</span>;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a==<span class="hljs-string">&quot;0&quot;</span>&amp;&amp;b==<span class="hljs-string">&quot;0&quot;</span>)<br>    &#123;<br>        *c=<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;0&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-built_in">string</span> result=a;<br>        <span class="hljs-keyword">while</span>(b!=<span class="hljs-string">&quot;1&quot;</span>)<br>        &#123;<br>            result=multi(result,a);<br>            b=aminusb(b,<span class="hljs-string">&quot;1&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">power</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a,<span class="hljs-built_in">string</span> b,<span class="hljs-keyword">bool</span> *c)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">bool</span> tb=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span>(b[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;-&#x27;</span>)tb=<span class="hljs-number">1</span>;<br>    b=absint(b);<br>    <span class="hljs-built_in">string</span> result;<br>    result=powerint(a,b,c);<br>    <span class="hljs-keyword">if</span>(tb)result=divide(<span class="hljs-string">&quot;1&quot;</span>,result,c);<br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">factorial</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a,<span class="hljs-keyword">bool</span> *c)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span>(a[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;-&#x27;</span>)<br>    &#123;<br>        *c=<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;0&quot;</span>;<br>    &#125;<br>    a=natural(a);<br>    <span class="hljs-keyword">if</span>(a==<span class="hljs-string">&quot;0&quot;</span>)<span class="hljs-keyword">return</span> <span class="hljs-string">&quot;1&quot;</span>;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-built_in">string</span> result=a;<br>        <span class="hljs-keyword">while</span>(a!=<span class="hljs-string">&quot;1&quot;</span>)<br>        &#123;<br>            result=multi(result,aminusb(a,<span class="hljs-string">&quot;1&quot;</span>));<br>            a=aminusb(a,<span class="hljs-string">&quot;1&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">transform</span><span class="hljs-params">(<span class="hljs-built_in">string</span> primary)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">string</span> subresult,result;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;primary[i]!=<span class="hljs-string">&#x27;\0&#x27;</span>;i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(primary[i]==<span class="hljs-string">&#x27;-&#x27;</span>&amp;&amp;primary[i+<span class="hljs-number">1</span>]!=<span class="hljs-string">&#x27;(&#x27;</span>)<br>        &#123;<br>            i++;<br>            <span class="hljs-built_in">string</span> curr=<span class="hljs-string">&quot;(0-&quot;</span>;<br>            <span class="hljs-keyword">while</span>((primary[i]&gt;=<span class="hljs-string">&#x27;0&#x27;</span>&amp;&amp;primary[i]&lt;=<span class="hljs-string">&#x27;9&#x27;</span>&amp;&amp;primary[i]!=<span class="hljs-string">&#x27;\0&#x27;</span>)||(primary[i]==<span class="hljs-string">&#x27;.&#x27;</span>))<br>            &#123;<br>                curr+=primary[i];<br>                i++;<br>            &#125;<br>            curr+=<span class="hljs-string">&#x27;)&#x27;</span>;<br>            subresult+=curr;<br>            subresult+=primary[i];<br>        &#125;<br>        <span class="hljs-keyword">else</span> subresult+=primary[i];<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;subresult[i]!=<span class="hljs-string">&#x27;\0&#x27;</span>;i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(((subresult[i]&gt;=<span class="hljs-string">&#x27;0&#x27;</span>&amp;&amp;subresult[i]&lt;=<span class="hljs-string">&#x27;9&#x27;</span>)||subresult[i]==<span class="hljs-string">&#x27;)&#x27;</span>)&amp;&amp;subresult[i+<span class="hljs-number">1</span>]==<span class="hljs-string">&#x27;(&#x27;</span>)<br>        &#123;<br>            result+=subresult[i];<br>            result+=<span class="hljs-string">&#x27;+&#x27;</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span> result+=subresult[i];<br>    &#125;<br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">ReversePolishForm</span><span class="hljs-params">(<span class="hljs-built_in">string</span> primary)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> chars[<span class="hljs-number">128</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>    chars[<span class="hljs-string">&#x27;+&#x27;</span>]=<span class="hljs-number">1</span>;<br>    chars[<span class="hljs-string">&#x27;-&#x27;</span>]=<span class="hljs-number">1</span>;<br>    chars[<span class="hljs-string">&#x27;*&#x27;</span>]=<span class="hljs-number">2</span>;<br>    chars[<span class="hljs-string">&#x27;/&#x27;</span>]=<span class="hljs-number">2</span>;<br>    chars[<span class="hljs-string">&#x27;^&#x27;</span>]=<span class="hljs-number">3</span>;<br>    chars[<span class="hljs-string">&#x27;!&#x27;</span>]=<span class="hljs-number">3</span>;<br>    primary=transform(primary);<br>    <span class="hljs-built_in">string</span> result;<br>    <span class="hljs-keyword">char</span> simstack[inf];<br>    <span class="hljs-keyword">int</span> xn=<span class="hljs-number">0</span>,sn=<span class="hljs-number">-1</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;primary[i]!=<span class="hljs-string">&#x27;\0&#x27;</span>;i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>((primary[i]&gt;=<span class="hljs-string">&#x27;0&#x27;</span>&amp;&amp;primary[i]&lt;=<span class="hljs-string">&#x27;9&#x27;</span>)||primary[i]==<span class="hljs-string">&#x27;.&#x27;</span>)<br>        result+=primary[i];<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            result+=<span class="hljs-string">&#x27;,&#x27;</span>;<br>            <span class="hljs-keyword">if</span>(chars[<span class="hljs-keyword">int</span>(primary[i])])<br>            &#123;<br>                <span class="hljs-comment">//xn++;</span><br>                <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>                &#123;<br>                    <span class="hljs-keyword">if</span>(sn==<span class="hljs-number">-1</span>||simstack[sn]==<span class="hljs-string">&#x27;(&#x27;</span>)<br>                    &#123;<br>                        sn++;<br>                        simstack[sn]=primary[i];<br>                        <span class="hljs-keyword">break</span>;<br>                    &#125;<br>                    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(chars[<span class="hljs-keyword">int</span>(primary[i])]&gt;chars[<span class="hljs-keyword">int</span>(simstack[sn])])<br>                    &#123;<br>                        sn++;<br>                        simstack[sn]=primary[i];<br>                        <span class="hljs-keyword">break</span>;<br>                    &#125;<br>                    <span class="hljs-keyword">else</span><br>                    &#123;<br>                        result+=simstack[sn];<br>                        <span class="hljs-comment">//xn++;</span><br>                        sn--;<br>                    &#125;<br>                &#125;<br><br>            &#125;<br>            <span class="hljs-keyword">else</span> <br>            &#123;<br>                xn++;<br>                <span class="hljs-keyword">if</span>(primary[i]==<span class="hljs-string">&#x27;(&#x27;</span>)<br>                &#123;<br>                    sn++;<br>                    simstack[sn]=<span class="hljs-string">&#x27;(&#x27;</span>;<br>                &#125;<br>                <span class="hljs-keyword">else</span><br>                &#123;<br>                    <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>                    &#123;<br>                        <span class="hljs-keyword">if</span>(sn!=<span class="hljs-number">-1</span>&amp;&amp;simstack[sn]==<span class="hljs-string">&#x27;(&#x27;</span>)<br>                        &#123;<br>                            sn--;<br>                            <span class="hljs-keyword">break</span>;<br>                        &#125;<br>                        <span class="hljs-keyword">else</span><br>                        &#123;<br>                            result+=simstack[sn];<br>                            sn--;<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">while</span>(sn!=<span class="hljs-number">-1</span>)<br>    &#123;<br>        result+=simstack[sn];<br>        sn--;<br>    &#125;<br>    <span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span>(result[j]==<span class="hljs-string">&#x27;,&#x27;</span>)j++;<br>    <span class="hljs-built_in">string</span> finalresult;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=j;result[i]!=<span class="hljs-string">&#x27;\0&#x27;</span>;i++)<br>    finalresult+=result[i];<br>    <span class="hljs-keyword">return</span> finalresult;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">calculateit</span><span class="hljs-params">(<span class="hljs-built_in">string</span> primary,<span class="hljs-keyword">bool</span> *c)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">string</span> a[<span class="hljs-number">1023</span>];<br>    <span class="hljs-keyword">int</span> an=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">bool</span> test=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;primary[i]!=<span class="hljs-string">&#x27;\0&#x27;</span>;i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(*c)<br>        &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;0&quot;</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span>((primary[i]&gt;=<span class="hljs-string">&#x27;0&#x27;</span>&amp;&amp;primary[i]&lt;=<span class="hljs-string">&#x27;9&#x27;</span>)||primary[i]==<span class="hljs-string">&#x27;.&#x27;</span>)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(test)<br>            &#123;<br>                an++;<br>                a[an]=<span class="hljs-string">&quot;&quot;</span>;<br>            &#125;<br>            test=<span class="hljs-number">0</span>;<br>            a[an]+=primary[i];<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(primary[i]==<span class="hljs-string">&#x27;,&#x27;</span>)<br>        test=<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            <span class="hljs-keyword">switch</span> (primary[i])<br>            &#123;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;+&#x27;</span>:<br>                    <br>                    an--;<br>                    a[an]=addab(a[an],a[an+<span class="hljs-number">1</span>]);<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;-&#x27;</span>:<br>                    <br>                    an--;<br>                    a[an]=aminusb(a[an],a[an+<span class="hljs-number">1</span>]);<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;*&#x27;</span>:<br>                <br>                    an--;<br>                    a[an]=multi(a[an],a[an+<span class="hljs-number">1</span>]);<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;/&#x27;</span>:<br><br>                    an--;<br>                    a[an]=divide(a[an],a[an+<span class="hljs-number">1</span>],c);<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;^&#x27;</span>:<br><br>                    an--;<br>                    a[an]=power(a[an],a[an+<span class="hljs-number">1</span>],c);<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;!&#x27;</span>:<br><br>                    a[an]=factorial(a[an],c);<br>                    <span class="hljs-keyword">break</span>;<br><br>            <br>            <span class="hljs-keyword">default</span>:<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> a[<span class="hljs-number">0</span>];<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">delnbsp</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">string</span> result;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;a[i]!=<span class="hljs-string">&#x27;\0&#x27;</span>;i++)<br>    <span class="hljs-keyword">if</span>(a[i]!=<span class="hljs-string">&#x27; &#x27;</span>)<br>    result+=a[i];<br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">setprecise</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a,<span class="hljs-keyword">int</span> b)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> c=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;a[i]!=<span class="hljs-string">&#x27;\0&#x27;</span>;i++)<br>    <span class="hljs-keyword">if</span>(a[i]==<span class="hljs-string">&#x27;.&#x27;</span>)<br>    c=i;<br>    <span class="hljs-keyword">if</span>(!c)<span class="hljs-keyword">return</span> a;<br>    <span class="hljs-built_in">string</span> result;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;a[i]!=<span class="hljs-string">&#x27;\0&#x27;</span>&amp;&amp;i&lt;=(b+c);i++)<br>    result+=a[i];<br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>    &#123;<br>    <span class="hljs-keyword">char</span> x[<span class="hljs-number">65535</span>];<br>    <span class="hljs-keyword">bool</span> c=<span class="hljs-number">0</span>;<br>    <span class="hljs-built_in">string</span> a;<br>    <span class="hljs-built_in">cin</span>.getline(x,<span class="hljs-number">65535</span>);<br>    a=delnbsp(x);<br>    a=ReversePolishForm(a);<br>    a=calculateit(a,&amp;c);<br>    <span class="hljs-keyword">if</span>(c)a=<span class="hljs-string">&quot;Error !&quot;</span>;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        a=setprecise(a,<span class="hljs-number">100</span>);<br>    &#125;<br>    <span class="hljs-built_in">cout</span>&lt;&lt;a.c_str()&lt;&lt;<span class="hljs-built_in">endl</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>；<br>&#125;<br></code></pre></td></tr></table></figure><p>P.S：代码太乱，目不忍视，但毕竟是花了些时间的大作业，留个纪念吧……</p>]]></content>
    
    
    <categories>
      
      <category>算法学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>高精</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>二分查找</title>
    <link href="/2021/02/02/2021-2-2/"/>
    <url>/2021/02/02/2021-2-2/</url>
    
    <content type="html"><![CDATA[<h3 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h3><h6 id="BinarySearch"><a href="#BinarySearch" class="headerlink" title="BinarySearch"></a>BinarySearch</h6><p>&nbsp;</p><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>类似二分法</p><p>用于顺序存储结构</p><h4 id="使用心得"><a href="#使用心得" class="headerlink" title="使用心得"></a>使用心得</h4><p>面对问题时有两种思考方式</p><ul><li>不断缩小查找范围直到找到最优解</li><li>不断排除“必不可能为最优解的解”，直至最后</li></ul><blockquote><p>我一直在想怎么来说明二分查找“一定不会漏掉最优解”，这里的第二种思考方式能很好地解释这一问题。</p></blockquote><p>&nbsp;</p><hr><p>&nbsp;</p><h4 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h4><p>Q：查找最接近的元素</p><p>描述</p><blockquote><p>在一个非降序列中，查找与给定值最接近的元素。</p></blockquote><p>输入</p><blockquote><p>第一行包含一个整数n，为非降序列长度。1 &lt;= n &lt;= 100000。<br>第二行包含n个整数，为非降序列各元素。所有元素的大小均在0-1,000,000,000之间。<br>第三行包含一个整数m，为要询问的给定值个数。1 &lt;= m &lt;= 10000。<br>接下来m行，每行一个整数，为要询问最接近元素的给定值。所有给定值的大小均在0-1,000,000,000之间。</p></blockquote><p>输出</p><blockquote><p>m行，每行一个整数，为最接近相应给定值的元素值，保持输入顺序。若有多个值满足条件，输出最小的一个。</p></blockquote><p>样例输入</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-number">3</span><br><span class="hljs-symbol">2 </span><span class="hljs-number">5</span> <span class="hljs-number">8</span><br><span class="hljs-number">2</span><br><span class="hljs-number">10</span><br><span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><p>y样例输出</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-number">8</span><br><span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><p>&nbsp;</p><hr><p>&nbsp;</p><h6 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">find</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a[],<span class="hljs-keyword">int</span> n,<span class="hljs-keyword">int</span> x)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> l=<span class="hljs-number">0</span>,r=n<span class="hljs-number">-1</span>,m,ans=<span class="hljs-number">0x3f3f3f3f</span>;<br>    <span class="hljs-keyword">while</span>(l&lt;=r)<br>    &#123;<br>        m=l+(r-l)/<span class="hljs-number">2</span>;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">abs</span>(a[m]-x)&lt;<span class="hljs-built_in">abs</span>(ans-x))<br>        ans=a[m];<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">abs</span>(a[m]-x)==<span class="hljs-built_in">abs</span>(ans-x))<br>        ans=min(ans,a[m]);<br>        <span class="hljs-keyword">if</span>(a[m]&lt;x)<br>        l=m+<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a[m]&gt;x)<br>        r=m<span class="hljs-number">-1</span>;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">break</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> ans;   <br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> n,m,a[<span class="hljs-number">100001</span>];<br>    <span class="hljs-built_in">cin</span>&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>    <span class="hljs-built_in">cin</span>&gt;&gt;a[i];<br>    <span class="hljs-built_in">cin</span>&gt;&gt;m;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;m;i++)<br>    &#123;<br>        <span class="hljs-keyword">int</span> x;<br>        <span class="hljs-built_in">cin</span>&gt;&gt;x;<br>        x=find(a,n,x);<br>        <span class="hljs-built_in">cout</span>&lt;&lt;x&lt;&lt;<span class="hljs-built_in">endl</span>;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h6 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h6><ul><li>L4 ~ L21为二分查找</li><li>考虑将中间的值与要找的数”x”做差，算绝对值，比较中间值与”x”的大小<strong>假设中间值小于”x”，那么中间值左侧的数据与”x”差的绝对值会更大，必不可能为最优解，因此舍弃</strong></li><li>用中间值计算得到的结果已经判断过，因此查找时<code>r=m-1</code>或者<code>l=m+1</code>不会造成漏解</li><li>L7中<code>while(l&lt;=r)</code>说明查找范围包含两端的数据</li></ul>]]></content>
    
    
    <categories>
      
      <category>算法学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>基础知识</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>指针变量学习笔记</title>
    <link href="/2021/01/30/2021-1-30/"/>
    <url>/2021/01/30/2021-1-30/</url>
    
    <content type="html"><![CDATA[<h2 id="指针变量学习笔记"><a href="#指针变量学习笔记" class="headerlink" title="指针变量学习笔记"></a>指针变量学习笔记</h2><h4 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h4><p>指针变量是一种变量类型（好像是废话）（但是个人认为这句话特别重要）</p><p>指针变量的值：某一内存地址的编号（这个内存地址上存有一个变量，就说这个指针指向这个变量；如果这个内存地址上没有存任何东西，就说这个指针是空指针）</p><blockquote><p>或许用一种类比的方法更容易理解：</p><p>你面前有五个袋子，从左到右依次排列，分别编号一二三四五；</p><p>定义一个int变量<code>int a=9</code>，假设存放在第三个袋子中。好，现在打开第三个袋子，你看到 “9”这个数字。</p><p>定义一个指针变量p，指向a，假设指针p存放在第二个袋子中。好，现在打开第二个袋子，你看到的是 “第三个袋子” 这样一行字。</p></blockquote><h4 id="怎么用"><a href="#怎么用" class="headerlink" title="怎么用"></a>怎么用</h4><h5 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h5><p>例如：声明一个指针p，这个指针p指向一个int类型的变量a，代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">int</span> a = <span class="hljs-number">12345</span>;   <span class="hljs-comment">//随便想的一个数，没啥特殊意思</span><br><span class="hljs-keyword">int</span> *p = &amp;a;<br></code></pre></td></tr></table></figure><p>解释一下：<code>int *p</code> 里面<code>int *</code>是变量类型，表示 “一个指向int类型变量的指针” ，<code>p</code> 是变量名，<code>&amp;a</code> 中&amp;是 “取址符号” ，<code>&amp;a</code>表示a的内存地址。</p><p>上面第二行代码意思就是：声明一个变量 p ，类型是指向int变量的指针，同时给这个变量赋值，值是一串内存地址，这个内存地址上存放着一个int变量a。</p><p>或许第二行写成如下形式更容易理解：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">int</span> *p;   <span class="hljs-comment">//定义一个指针变量，变量名为p</span><br>p = &amp;a;   <span class="hljs-comment">//p的值是a所在的内存地址</span><br></code></pre></td></tr></table></figure><blockquote><p>按照上面的类比，&amp;a就是“第三个袋子”这样一行字，p=&amp;a就是将这个地址名赋给了p</p></blockquote><h5 id="取值"><a href="#取值" class="headerlink" title="取值"></a>取值</h5><p>用到取值符号<code>*</code>：</p><p>p是这个指针变量的变量名，加上* 变成 *p 意思就是 “p所指地址上的变量的值” </p><blockquote><p>按照上面的类比，p就是”第三个袋子“这一行字，*p就是“第三个袋子里面的值”，也就是说 *p == a是成立的。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>算法学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>基础知识</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>高精加和高精乘（正整数）</title>
    <link href="/2021/01/29/2021-1-29/"/>
    <url>/2021/01/29/2021-1-29/</url>
    
    <content type="html"><![CDATA[<h2 id="高精加和高精乘"><a href="#高精加和高精乘" class="headerlink" title="高精加和高精乘"></a>高精加和高精乘</h2><h6 id="仅正整数"><a href="#仅正整数" class="headerlink" title="仅正整数"></a>仅正整数</h6><h4 id="高精度加法"><a href="#高精度加法" class="headerlink" title="高精度加法"></a>高精度加法</h4><h5 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h5><p>核心：模拟笔算</p><p>即用数组里的每个元素来作为笔算加法竖式的每一位</p><p>为规范化以及移植性，输入输出均为string</p><p>步骤：</p><ol><li>将字符串存入数组a和b</li><li>另外定义两个数组s和c，分别存储每一位的结果值和进位值</li><li>c[0]的值为0，s[i]的值是(a[i]+b[i]+c[i])%10，c[i]的值是(a[i]+b[i]+c[i])/10，以此类推，完成所有位数的相加</li><li>将数组元素存入新定义的string中</li></ol><p>注意事项：</p><blockquote><ul><li>对数组int a[10]的理解：包含a[0]，a[1]，a[2]，…，a[9]共10个元素</li><li>string类：按顺序往里填入元素时（步骤4），用<code>str+ =  &#39;单个元素&#39;</code>，表示结束时如果用赋值的方法（比如<code>str[2] = &#39;\0&#39;;</code>），可能引起后续对该字符串的操作出错</li><li>输出string类：调用函数<code> cout&lt;&lt;sum.c_str()&lt;&lt;endl;</code>（因为不能直接输出）（可以试试）</li></ul></blockquote><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">getN</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> n=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span>(a[n]!=<span class="hljs-string">&#x27;\0&#x27;</span>)n++;<br>    <span class="hljs-keyword">return</span> n;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">string</span> a,b;<br>    <span class="hljs-built_in">cin</span>&gt;&gt;a&gt;&gt;b;<br>    <span class="hljs-keyword">int</span> an=getN(a);<br>    <span class="hljs-keyword">int</span> bn=getN(b);<br>    <span class="hljs-keyword">int</span> N=an;<br>    <span class="hljs-keyword">if</span>(an&lt;bn)N=bn;<br>    <span class="hljs-keyword">int</span> aa[N]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;an;i++)aa[i]=a[an<span class="hljs-number">-1</span>-i]-<span class="hljs-string">&#x27;0&#x27;</span>;<br>    <span class="hljs-keyword">int</span> bb[N]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;bn;i++)bb[i]=b[bn<span class="hljs-number">-1</span>-i]-<span class="hljs-string">&#x27;0&#x27;</span>;<br>    <span class="hljs-keyword">int</span> s[N+<span class="hljs-number">1</span>],c[N+<span class="hljs-number">1</span>];<br>    c[<span class="hljs-number">0</span>]=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)<br>    &#123;<br>        s[i]=(aa[i]+bb[i]+c[i])%<span class="hljs-number">10</span>;<br>        c[i+<span class="hljs-number">1</span>]=(aa[i]+bb[i]+c[i])/<span class="hljs-number">10</span>;<br>    &#125;<br>    s[N]=c[N];<br>    <span class="hljs-built_in">string</span> sum;<br>    <span class="hljs-keyword">if</span>(s[N]==<span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)<br>        sum+=s[N<span class="hljs-number">-1</span>-i]+<span class="hljs-string">&#x27;0&#x27;</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;=N;i++)<br>        sum+=s[N-i]+<span class="hljs-string">&#x27;0&#x27;</span>;<br>    &#125;<br>    <span class="hljs-built_in">cout</span>&lt;&lt;sum.c_str()&lt;&lt;<span class="hljs-built_in">endl</span>;<br><br>    system(<span class="hljs-string">&quot;pause&quot;</span>);<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="高精度乘法"><a href="#高精度乘法" class="headerlink" title="高精度乘法"></a>高精度乘法</h4><h5 id="实现思路-1"><a href="#实现思路-1" class="headerlink" title="实现思路"></a>实现思路</h5><p>先实现个位数乘多位的整数（输入输出均为字符串），再在经过对应补零操作后用高精加，实现高精度乘法</p><blockquote><p>至于为什么不用高精度累加来代替乘法，原因：肉眼可见的复杂度</p></blockquote><h5 id="个位数乘多位整数"><a href="#个位数乘多位整数" class="headerlink" title="个位数乘多位整数"></a>个位数乘多位整数</h5><p>注意事项：同高精度加法，不再赘述</p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">getN</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> n=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span>(a[n]!=<span class="hljs-string">&#x27;\0&#x27;</span>)n++;<br>    <span class="hljs-keyword">return</span> n;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> a;<br>    <span class="hljs-built_in">string</span> b;<br>    <span class="hljs-built_in">cin</span>&gt;&gt;a&gt;&gt;b;<br>    <span class="hljs-keyword">int</span> n=getN(b);<br>    <span class="hljs-keyword">int</span> bb[n];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>    bb[i]=b[n<span class="hljs-number">-1</span>-i]-<span class="hljs-string">&#x27;0&#x27;</span>;<br>    <span class="hljs-keyword">int</span> c[n+<span class="hljs-number">1</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">int</span> s[n+<span class="hljs-number">1</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>    &#123;<br>        s[i]=(a*bb[i]+c[i])%<span class="hljs-number">10</span>;<br>        c[i+<span class="hljs-number">1</span>]=(a*bb[i]+c[i])/<span class="hljs-number">10</span>;<br>    &#125;<br>    s[n]=c[n];<br>    <span class="hljs-built_in">string</span> r;<br>    <span class="hljs-keyword">if</span>(s[n]==<span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>        r+=s[n<span class="hljs-number">-1</span>-i]+<span class="hljs-string">&#x27;0&#x27;</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;=n;i++)<br>        r+=s[n-i]+<span class="hljs-string">&#x27;0&#x27;</span>;<br>    &#125;<br>    <span class="hljs-built_in">cout</span>&lt;&lt;r.c_str()&lt;&lt;<span class="hljs-built_in">endl</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="多位数乘多位数"><a href="#多位数乘多位数" class="headerlink" title="多位数乘多位数"></a>多位数乘多位数</h5><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">getN</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> n=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span>(a[n]!=<span class="hljs-string">&#x27;\0&#x27;</span>)n++;<br>    <span class="hljs-keyword">return</span> n;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-built_in">string</span> a,<span class="hljs-built_in">string</span> b)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> an=getN(a);<br>    <span class="hljs-keyword">int</span> bn=getN(b);<br>    <span class="hljs-keyword">int</span> N=an;<br>    <span class="hljs-keyword">if</span>(an&lt;bn)N=bn;<br>    <span class="hljs-keyword">int</span> aa[N]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;an;i++)<br>        aa[i]=a[an<span class="hljs-number">-1</span>-i]-<span class="hljs-string">&#x27;0&#x27;</span>;<br>    <span class="hljs-keyword">int</span> bb[N]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;bn;i++)<br>        bb[i]=b[bn<span class="hljs-number">-1</span>-i]-<span class="hljs-string">&#x27;0&#x27;</span>;<br>    <span class="hljs-keyword">int</span> s[N+<span class="hljs-number">1</span>],c[N+<span class="hljs-number">1</span>];<br>    c[<span class="hljs-number">0</span>]=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)<br>    &#123;<br>        s[i]=(aa[i]+bb[i]+c[i])%<span class="hljs-number">10</span>;<br>        c[i+<span class="hljs-number">1</span>]=(aa[i]+bb[i]+c[i])/<span class="hljs-number">10</span>;<br>    &#125;<br>    s[N]=c[N];<br>    <span class="hljs-built_in">string</span> sum;<br>    <span class="hljs-keyword">if</span>(s[N]==<span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)<br>        sum+=s[N<span class="hljs-number">-1</span>-i]+<span class="hljs-string">&#x27;0&#x27;</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;=N;i++)<br>        sum+=s[N-i]+<span class="hljs-string">&#x27;0&#x27;</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> sum;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">multi_1</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a,<span class="hljs-built_in">string</span> b)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> n=getN(b);<br>    <span class="hljs-keyword">int</span> bb[n];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>    bb[i]=b[n<span class="hljs-number">-1</span>-i]-<span class="hljs-string">&#x27;0&#x27;</span>;<br>    <span class="hljs-keyword">int</span> c[n+<span class="hljs-number">1</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">int</span> s[n+<span class="hljs-number">1</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>    &#123;<br>        s[i]=(a*bb[i]+c[i])%<span class="hljs-number">10</span>;<br>        c[i+<span class="hljs-number">1</span>]=(a*bb[i]+c[i])/<span class="hljs-number">10</span>;<br>    &#125;<br>    s[n]=c[n];<br>    <span class="hljs-built_in">string</span> r;<br>    <span class="hljs-keyword">if</span>(s[n]==<span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>        r+=s[n<span class="hljs-number">-1</span>-i]+<span class="hljs-string">&#x27;0&#x27;</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;=n;i++)<br>        r+=s[n-i]+<span class="hljs-string">&#x27;0&#x27;</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> r;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">add_0</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a,<span class="hljs-built_in">string</span> b)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;a;i++)<br>    &#123;<br>        b+=<span class="hljs-string">&quot;0&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> b;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">string</span> a,b;<br>    <span class="hljs-built_in">cin</span>&gt;&gt;a&gt;&gt;b;<br>    <span class="hljs-keyword">int</span> an=getN(a);<br>    <span class="hljs-keyword">int</span> aa[an];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;an;i++)<br>    aa[i]=a[an<span class="hljs-number">-1</span>-i]-<span class="hljs-string">&#x27;0&#x27;</span>;<br>    <span class="hljs-built_in">string</span> c=<span class="hljs-string">&quot;0&quot;</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;an;i++)<br>    c=add(add_0(i,multi_1(aa[i],b)),c);<br>    <span class="hljs-built_in">cout</span>&lt;&lt;c.c_str()&lt;&lt;<span class="hljs-built_in">endl</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>核心思想是模拟竖式计算</p><p>注意string类的用法</p><p>PS: 其实这一篇博客还是为了测试</p>]]></content>
    
    
    <categories>
      
      <category>算法学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>高精</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>To my devoted ones</title>
    <link href="/2020/12/05/2020-12-5/"/>
    <url>/2020/12/05/2020-12-5/</url>
    
    <content type="html"><![CDATA[<p>Oh, I was 22 years old</p><p>&nbsp;</p><p>My mother told me that you learn more as you go</p><p>&nbsp;</p><p>But I’ve spent many nights alone</p><p>&nbsp;</p><p>Do I need more for me to make this house a home</p><p>&nbsp;</p><p>‘Cause sometimes there’s more to the story</p><p>&nbsp;</p><p>And they don’t know what’s going on in</p><p>&nbsp;</p><p>My life behind closed doors</p><p>&nbsp;</p><p>Maybe there is nothing wrong</p><p>&nbsp;</p><p>And I will keep holding on</p><p>&nbsp;</p><p>I know I can be strong</p><p>&nbsp;</p><p>&nbsp;</p><p>​          &emsp;        &emsp;             &emsp;    &emsp;    &emsp;                              &emsp;         &emsp;                                        ——My Blood &lt; Westlife &gt;</p><hr><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span><br><span class="hljs-function"></span>&#123;<br><br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">&quot;just for test&quot;</span>&lt;&lt;<span class="hljs-built_in">endl</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>Just For Test      <code> just for  test</code></p>]]></content>
    
    
    <categories>
      
      <category>胡言乱语</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>起点</title>
    <link href="/2020/11/26/2020-11-26/"/>
    <url>/2020/11/26/2020-11-26/</url>
    
    <content type="html"><![CDATA[<h1 id="起点"><a href="#起点" class="headerlink" title="起点"></a>起点</h1><p>我一直在想要怎样以一个较为正式的开头来开启我的博客之旅，之后觉得大可不必。怎样开头都算是开头，如果说我直接进入正题 ，没了开头，其实也问题不大。现在的我，在武汉大学信息学部国软教学楼B4-201教室，现在的时间是21：27，今天是11月26日，在2020年，我写下了，一篇名为《起点》的博客。</p><p>从上上周起，我开始学习C++，然后参加了几天前的新生赛。</p><p>然后沉迷于代码之中，无法自拔……以至于……以至于高数掉了几节课，英语小测差点不及格？（wawa大哭）</p><p>我不知道未来会怎么样，但是捣鼓这个东西，的确给了我快乐。我意识到我是喜欢这个东西的。所以我选择“冲冲冲”。有幸遇到了学长学姐，有幸遇到了同专业的、有着同样想法的同学，有幸看着身边的人跟我一样，从零基础开始努力，有幸听了ACM宣讲……我遇见过不那么快乐的事，也遇上了很多很棒的事，你看这个世界是复杂的，看不太懂，你看这一行行代码也挺复杂的。</p><p>我想要，走上这条路，我想要将宝贵的大学时光分一些给它，即使是从零开始，即使是暂时远远落后。我不知道将会怎样，我也不必想将来会怎样，我只需要知道：这一刻我是快乐的，我确实是在为一个目标努力着，它仿佛就在眼前，触手可及。我会试着，会努力安排好学习生活，这是给自己一个交待。</p><p>然后，我开通了许久的博客，有了第一篇它正式的内容。现在的我在自习室，时间是21：53，明天晚上有一门课的开卷考试。</p><p>这是我的起点。</p><p>2020/11/26</p>]]></content>
    
    
    <categories>
      
      <category>胡言乱语</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>文章分类</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<p> 文章分类 ovo</p>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>标签</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>tags</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>导航</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<p>&nbsp;</p><h4 id="这里收录一些有用的网站"><a href="#这里收录一些有用的网站" class="headerlink" title="这里收录一些有用的网站"></a>这里收录一些有用的网站</h4><ul><li><a href="noi.openjudge.cn">程序设计基础训练</a></li><li><a href="https://www.webdesignrankings.com/resources/lolcolors/">网站色彩搭配推荐</a></li></ul><p>&nbsp;</p><h4 id="有趣的网站"><a href="#有趣的网站" class="headerlink" title="有趣的网站"></a>有趣的网站</h4><ul><li><a href="https://theuselessweb.com/">一个没用的网站</a></li><li><a href="https://suulnnka.github.io/BullshitGenerator/index.html">可以用来水字数的网站</a></li><li><a href="https://www.remove.bg/zh">没事来抠一抠图</a></li><li><a href="http://scp-wiki-cn.wikidot.com/">当然少不了基金会</a></li><li><a href="https://fakeupdate.net/">或许你想给电脑升一下级？</a></li><li><a href="https://zuanbot.com/">lol中国，电信二区</a></li></ul>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>友情链接</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<p> 友情链接</p>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>about</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<p> 一个普通的男生</p><p>现就读于湖北某大学计算机学院</p><p>喜欢折腾，喜欢整活</p><p>因菜而学</p><p>用QQ比用微信多</p><p><del>花括号换行（doge）</del></p><p><del>讨厌写注释（doge）</del></p><p>有幸结识大佬<a href="http://www.noobzyk.top/">Ekennis</a>，一起从零开始准备比赛（虽然比我厉害多了）</p><p>写blog大概是为了记录大学生活吧</p><p>以上</p>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>tags</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
</search>
